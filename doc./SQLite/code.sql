CREATE TABLE users(
	ID INTEGER PRIMARY KEY,
	surname VARCHAR(100) NOT NULL,
	name VARCHAR(100) NOT NULL,
	number_phone VARCHAR(25) NOT NULL
);

CREATE TABLE genres(
	ID INTEGER PRIMARY KEY,
	Name_genre VARCHAR(100) NOT NULL,
	Description_genre VARCHAR(100) NOT NULL
);

CREATE TABLE author(
	ID INTEGER PRIMARY KEY,
	book_name VARCHAR(100) NOT NULL,
	Year_izd DATE NOT NULL
);

CREATE TABLE roles(
	ID INTEGER PRIMARY KEY,
	role_name VARCHAR(100) NOT NULL,
	Access_lvl INTEGER NOT NULL
);

CREATE TABLE books(
	id INTEGER PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	Year_izd DATE NOT NULL,
	Count INTEGER NOT NULL,
	genre_id INTEGER NOT NULL,
	author_id INTEGER NOT NULL,
	FOREIGN KEY(genre_ID) REFERENCES genres(id),
	FOREIGN KEY(author_ID) REFERENCES author(id)
	ON DELETE SET NULL ON UPDATE NO ACTION
	
);

CREATE TABLE books_out(
	id INTEGER PRIMARY KEY,
	user_id INTEGER NOT NULL,
	book_id INTEGER NOT NULL,
	date_in date NOT NULL,
	date_out date NOT NULL,
	FOREIGN KEY(user_ID) REFERENCES users(id),
	FOREIGN KEY(book_ID) REFERENCES books(id)
	ON DELETE SET NULL ON UPDATE NO ACTION
);


CREATE TABLE profile(
	id INTEGER PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	role_name VARCHAR(100) NOT NULL,
	user_id INTEGER NOT NULL,
	role_id INTEGER NOT NULL,
	FOREIGN KEY(user_ID) REFERENCES users(id),
	FOREIGN KEY(role_ID) REFERENCES roles(id)
	ON DELETE SET NULL ON UPDATE NO ACTION
);

CREATE TABLE coments(
	id INTEGER PRIMARY KEY,
	profile_id INTEGER NOT NULL,
	date DATE NOT NULL,
	coment VARCHAR(100) NOT NULL,
	FOREIGN KEY(profile_id) REFERENCES profile(id)
	ON DELETE SET NULL ON UPDATE NO ACTION
);


CREATE TABLE Deleted_coments(
	id INTEGER PRIMARY KEY,
	coment_id INTEGER NOT NULL,
	date_deleted DATE NOT NULL,
	details VARCHAR(100) NOT NULL,
	FOREIGN KEY(coment_id) REFERENCES coments(id)
	ON DELETE SET NULL ON UPDATE NO ACTION
);

CREATE TABLE Deleted_profile(
	id INTEGER PRIMARY KEY,
	profile_id INTEGER NOT NULL,
	date_deleted DATE NOT NULL,
	details VARCHAR(100) NOT NULL,
	FOREIGN KEY(profile_id) REFERENCES profile(id)
	ON DELETE SET NULL ON UPDATE NO ACTION
);



